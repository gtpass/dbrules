name: Release
on:
  workflow_dispatch:
  schedule:
    - cron: "30 22 * * *"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get latest go version
        id: version
        run: |
          echo ::set-output name=go_version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.version.outputs.go_version }}
          
      - name: Build geosite
        id: build
        run: |
           go run -v .
           
           

      - name: Get geosite.dat geoip.dat files from Loyalsoldier
        run: |
          wget -O geosite.dat https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat
          wget -O geoip.dat https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat
          # wget https://github.com/Loyalsoldier/geoip/raw/release/geoip.dat
          
      - name: Build  db file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
           go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
           geo convert site -i v2ray -o sing -f geosite.db ./geosite.dat
           geo convert ip -i v2ray -o sing -f geoip.db ./geoip.dat
           
      - name: Convert geo to sing-rule-set
        env:
          NO_SKIP: true
        run: |
          mkdir -p ./sing-rule/geo
          cd ./sing-rule/geo
          wget https://github.com/SagerNet/sing-box/releases/download/v1.8.0-alpha.11/sing-box-1.8.0-alpha.11-linux-amd64.tar.gz -O sing-box.tar.gz && tar zxvf sing-box.tar.gz && mv sing-box-1.8.0-alpha.11-linux-amd64/sing-box ./ && rm -r sing-box-1.8.0-alpha.11-linux-amd64
          wget https://github.com/IrineSistiana/mosdns/releases/download/v4.5.3/mosdns-linux-amd64.zip -O mosdns.zip && unzip mosdns.zip
          cp ../../geoip.dat ./ && cp ../../geoip.db ./geoip.db && cp ../../geosite.db ./

          mkdir -p geoip
          ./mosdns v2dat unpack-ip -o ./geoip/ geoip.dat
          list=($(ls ./geoip | sed 's/geoip_//g' | sed 's/\.txt//g'))
          for ((i = 0; i < ${#list[@]}; i++)); do
          	sed -i 's/^/        "/g' geoip/geoip_${list[i]}.txt
          	sed -i 's/$/",/g' geoip/geoip_${list[i]}.txt
          	sed -i '1s/^/{\n  "version": 1,\n  "rules": [\n    {\n      "ip_cidr": [\n/g' geoip/geoip_${list[i]}.txt
          	sed -i '$ s/,$/\n      ]\n    }\n  ]\n}/g' geoip/geoip_${list[i]}.txt
          	mv geoip/geoip_${list[i]}.txt geoip/${list[i]}.json
          	./sing-box rule-set compile "./geoip/${list[i]}.json" -o ./geoip/${list[i]}.srs
          done
          list=($(./sing-box geosite list | sed 's/ (.*)$//g'))
          mkdir -p geosite
          for ((i = 0; i < ${#list[@]}; i++)); do
          	./sing-box geosite export ${list[i]}
            ./sing-box rule-set compile "geosite-${list[i]}.json" -o ./geosite/${list[i]}.srs
          	mv geosite-${list[i]}.json ./geosite/${list[i]}.json
          done

          rm LICENSE README.md config.yaml geoip.dat geoip.db geosite.db mosdns mosdns.zip sing-box sing-box.tar.gz 

      - name: Convert geo to rocket-rule-set
        env:
          NO_SKIP: true
        run: |
          mkdir -p ./rocket-rule 
          cd ./rocket-rule
          wget https://github.com/IrineSistiana/mosdns/releases/download/v4.5.3/mosdns-linux-amd64.zip -O mosdns.zip && unzip mosdns.zip
          cp ../geoip.dat ./geoip.dat && cp ../geosite.dat ./geosite.dat
          mkdir -p sites 
          ./mosdns v2dat unpack-domain -o ./rocket-rule/sites/  ./geosite.dat
          mkdir -p ips
          ./mosdns v2dat unpack-ip -o ./rocket-rule/ips/  ./geoip.dat
          list=($(ls ./ips | sed 's/geoip_//g' | sed 's/\.txt//g'))
          for ((i = 0; i < ${#list[@]}; i++)); do
          	sed -i 's/^/IP-CIDR,/g' ips/geoip_${list[i]}.txt
          	sed -i 's/$/,${list[i]}/g' ips/geoip_${list[i]}.txt
          	# sed -i '1s/^/{\n  "version": 1,\n  "rules": [\n    {\n      "ip_cidr": [\n/g' ips/geoip_${list[i]}.txt
          	# sed -i '$ s/,$/\n      ]\n    }\n  ]\n}/g' ips/geoip_${list[i]}.txt
          	mv ips/geoip_${list[i]}.txt ips/${list[i]}.list
          done
          list=($(ls ./sites | sed 's/geoip_//g' | sed 's/\.txt//g'))
          for ((i = 0; i < ${#list[@]}; i++)); do
            sed -i '/^regexp:/d' sites/geosite_${list[i]}.txt
            sed -i 's/^full:|^rootDomain:/DOMAIN,/g' sites/geosite_${list[i]}.txt
            sed -i 's/^keyword:|^plain:/DOMAIN-KEYWORD,/g' sites/geosite_${list[i]}.txt
            sed -i '/^DOMAIN,/!{ /^DOMAIN-KEYWORD,/! { /\./! s/^/DOMAIN-SUFFIX,/ } }' sites/geosite_${list[i]}.txt
            
            sed -i 's/$/,${list[i]}/g' sites/geosite_${list[i]}.txt
          	mv sites/geosite_${list[i]}.txt sites/${list[i]}.list
          done
          rm LICENSE README.md config.yaml geoip.dat geosite.dat  mosdns mosdns.zip  

      - name: Move db and geosite srs files
        run: |
          mkdir -p ./publish/
          # wget https://raw.githubusercontent.com/xishang0128/geoip/release/Country.mmdb -O ./publish/country-lite.mmdb
          # wget https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb -O ./publish/country.mmdb
          install -Dp ./geoip.dat ./publish/
          install -Dp ./geosite.dat ./publish/
          install -Dp ./geoip.db ./publish/
          install -Dp ./geosite.db ./publish/
          
          
          install -Dp ./rule-set/geosite-china-list.srs ./publish/
          install -Dp ./rule-set/geosite-gfw.srs ./publish/
          install -Dp ./rule-set/geosite-geolocation-cn.srs ./publish/geosite-geolocation-cn.srs
          install -Dp ./rule-set/geosite-geolocation-!cn.srs ./publish/geosite-geolocation-!cn.srs
          install -Dp ./rule-set/geosite-category-ads-all.srs ./publish/
          install -Dp ./rule-set/geosite-google.srs ./publish/
          install -Dp ./rule-set/geosite-apple.srs ./publish/
          install -Dp ./rule-set/geosite-telegram.srs ./publish/
          install -Dp ./rule-set/geosite-steam.srs ./publish/
          install -Dp ./rule-set/geosite-youku.srs ./publish/
          install -Dp ./rule-set/geosite-cloudflare.srs ./publish/
          install -Dp ./rule-set/geosite-cloudflare-cn.srs ./publish/
          install -Dp ./rule-set/geosite-fastly.srs ./publish/
          install -Dp ./rule-set/geosite-twitter.srs ./publish/
          install -Dp ./rule-set/geosite-facebook.srs ./publish/
          install -Dp ./rule-set/geosite-facebook-dev.srs ./publish/
          install -Dp ./rule-set/geosite-win-spy.srs ./publish/
          install -Dp ./rule-set/geosite-win-extra.srs ./publish/
          install -Dp ./rule-set/geosite-win-update.srs ./publish/
          install -Dp ./rule-set/geosite-alibabacloud.srs ./publish/
          install -Dp ./rule-set/geosite-alibaba@!cn.srs ./publish/
          install -Dp ./rule-set/geosite-youtube.srs ./publish/
          install -Dp ./rule-set/geosite-youtube@cn.srs ./publish/
          install -Dp ./rule-set/geosite-okx@cn.srs ./publish/
          install -Dp ./rule-set/geosite-binance.srs ./publish/
          install -Dp ./rule-set/geosite-okx.srs ./publish/
          install -Dp ./rule-set/geosite-apple-dev.srs ./publish/
          install -Dp ./rule-set/geosite-tencent.srs ./publish/
          
          
          cd ./publish || exit 1
          sha256sum geoip.dat > geoip.dat.sha256sum
          sha256sum geosite.dat > geosite.dat.sha256sum
 
          sha256sum geoip.db > geoip.db.sha256sum          
          sha256sum geosite.db > geosite.db.sha256sum      
          
      - name: mv default geosite rules  to singdefault
        if: steps.build.outputs.skip != 'true'
        run: |
          mkdir -p ./singdefault/sites
          cp -rf ./rule-set/*.* ./singdefault/sites/
          cd ./singdefault/sites
          for file in *;do
              newfile=$(echo $file | sed 's/geosite-//g')
              mv "$file" "$newfile"
          done
           
      - name: Release geosite rule sets
        if: steps.build.outputs.skip != 'true'
        run: |
          chmod +x .github/release-rule-set.sh
          cd rule-set
          set -e -o pipefail
          git init
          git config --local user.email "github-action@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git remote add origin https://github-action:$GITHUB_TOKEN@github.com/gtpass/dbrules.git
          git branch -M geosite-rule-set
          git add .
          git commit -m "Update rule-set"
          git push -f origin geosite-rule-set
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build geoip
        id: buildgeoip
        run: |
           cd .geoip  || exit 1
           go run -v .
           
      - name: Move  geoip srs files
        run: |
          install -Dp .geoip/rule-set/geoip-cn.srs ./publish/
          install -Dp .geoip/rule-set/geoip-jp.srs ./publish/
          install -Dp .geoip/rule-set/geoip-cloudflare.srs ./publish/
          install -Dp .geoip/rule-set/geoip-cloudfront.srs ./publish/
          install -Dp .geoip/rule-set/geoip-facebook.srs ./publish/
          install -Dp .geoip/rule-set/geoip-fastly.srs ./publish/
          install -Dp .geoip/rule-set/geoip-google.srs ./publish/
          install -Dp .geoip/rule-set/geoip-netflix.srs ./publish/
          install -Dp .geoip/rule-set/geoip-private.srs ./publish/
          install -Dp .geoip/rule-set/geoip-telegram.srs ./publish/
          install -Dp .geoip/rule-set/geoip-twitter.srs  ./publish/
          
      - name: mv default geoip rules  to singdefault
        if: steps.build.outputs.skip != 'true'
        run: |
          mkdir -p  ./singdefault/ips
          cp -rf .geoip/rule-set/*.* ./singdefault/ips/   
          cd ./singdefault/ips
           for file in *;do
              newfile=$(echo $file | sed 's/geoip-//g')
              mv "$file" "$newfile"
          done
          
      - name: Release geoip rule sets
        if: steps.build.outputs.skip != 'true'
        run: |
          chmod +x .github/release-rule-set.sh
          cd .geoip/rule-set
          set -e -o pipefail
          git init
          git config --local user.email "github-action@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          git remote add origin https://github-action:$GITHUB_TOKEN@github.com/gtpass/dbrules.git
          git branch -M geoip-rule-set
          git add .
          git commit -m "Update rule-set"
          git push -f origin geoip-rule-set
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate sha256 hash
        if: steps.build.outputs.skip != 'true'
        run: |
          sha256sum geoip.dat > geoip.dat.sha256sum
          sha256sum geosite.dat > geosite.dat.sha256sum
 
          sha256sum geoip.db > geoip.db.sha256sum          
          sha256sum geosite.db > geosite.db.sha256sum   
          
      - name: Delete current release assets
        uses: andreaswilli/delete-release-assets-action@v3.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
          deleteOnlyFromDrafts: false

      - name: Create and Upload Release
        id: upload_release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: Release ${{ env.BUILDTIME }}
          tag: latest
          file_glob: true
          overwrite: true
          file: ./publish/*
          
      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "Released on ${{ env.BUILDTIME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
          
      - name: Git push assets to "sing" branch
        run: |
            cd sing-rule || exit 1
            ls
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b sing
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin sing

      - name: Git push default assets to "singdefault" branch
        run: |
            cd singdefault || exit 1
            ls
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b singdefault
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin singdefault

      - name: Git push assets to "rocket-rule" branch
        run: |
            cd rocket-rule || exit 1
            ls
            git init
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b rocket-rule
            git add .
            git commit -m "Released on ${{ env.BUILDTIME }}"
            git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
            git push -f -u origin rocket-rule
            
      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done
